---
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<slot />
	</body>
</html>
<style is:global>
	:root {
		--accent: 136, 58, 234;
		--accent-light: 224, 204, 250;
		--accent-dark: 49, 10, 101;
		--accent-gradient: linear-gradient(
			45deg,
			rgb(var(--accent)),
			rgb(var(--accent-light)) 30%,
			white 60%
		);
	}
	html {
		font-family: system-ui, sans-serif;
		background: #13151a;
	}
	code {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
	}
	table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
}

th,
td {
    padding: 10px;
    text-align: center;
    border: 1px solid #ccc;
}

button {
    margin-top: 10px;
    padding: 10px 20px;
    font-size: 16px;
}
main {
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
}
.astro-a {
    position: absolute;
    top: -32px;
    left: 50%;
    transform: translatex(-50%);
    width: 220px;
    height: auto;
    z-index: -1;
}
h1 {
    font-size: 4rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 1em;
}
.text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
}
.instructions {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
    padding: 1.5rem;
    border-radius: 8px;
}
.instructions code {
    font-size: 0.8em;
    font-weight: bold;
    background: rgba(var(--accent-light), 12%);
    color: rgb(var(--accent-light));
    border-radius: 4px;
    padding: 0.3em 0.4em;
}
.instructions strong {
    color: rgb(var(--accent-light));
}
/*-------------------------------------------------------*/
/* From Uiverse.io by AmIt-DasIT */
.container {
    display: flex;
    flex-direction: column;
    gap: 7px;
    position: relative;
    color: white;
}

.container .label {
    font-size: 15px;
    padding-left: 10px;
    position: absolute;
    top: 13px;
    transition: 0.3s;
    pointer-events: none;
}

.input {
    width: 250px;
    height: 45px;
    border: none;
    outline: none;
    padding: 0px 7px;
    border-radius: 6px;
    color: #ffffff00;
    font-size: 15px;
    background-color: transparent;
    box-shadow:
        3px 3px 10px rgba(0, 0, 0, 1),
        -1px -1px 6px rgba(255, 255, 255, 0.4);
}

.input:focus {
    border: 2px solid transparent;
    color: #fff;
    box-shadow:
        3px 3px 10px rgba(0, 0, 0, 1),
        -1px -1px 6px rgba(255, 255, 255, 0.4),
        inset 3px 3px 10px rgba(0, 0, 0, 1),
        inset -1px -1px 6px rgba(255, 255, 255, 0.4);

    ~ .label,
    ~ .label {
        transition: 0.3s;
        padding-left: 2px;
        transform: translateY(-35px);
    }

    .input:valid,
    .input:focus {
        box-shadow:
            3px 3px 10px rgba(0, 0, 0, 1),
            -1px -1px 6px rgba(255, 255, 255, 0.4),
            inset 3px 3px 10px rgba(0, 0, 0, 1),
            inset -1px -1px 6px rgba(255, 255, 255, 0.4);
    }
}
/*-------------------------------------------------------*/
/*-------------------------------------------------------*/
/*-------------------------------------------------------*/
/* From Uiverse.io by AlimurtuzaCodes */
.btn {
    border: none;
    width: 15em;
    height: 5em;
    border-radius: 3em;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 12px;
    background: #1c1a1c;
    cursor: pointer;
    transition: all 450ms ease-in-out;
}

.sparkle {
    fill: #aaaaaa;
    transition: all 800ms ease;
}

.text {
    font-weight: 600;
    color: #cacaca;
    font-size: medium;
}

.btn:hover {
    background: linear-gradient(0deg, #a47cf3, #683fea);
    box-shadow:
        inset 0px 1px 0px 0px rgba(255, 255, 255, 0.4),
        inset 0px -4px 0px 0px rgba(0, 0, 0, 0.2),
        0px 0px 0px 4px rgba(255, 255, 255, 0.2),
        0px 0px 180px 0px #9917ff;
    transform: translateY(-2px);
}

.btn:hover .text {
    color: white;
}

.btn:hover .sparkle {
    fill: white;
    transform: scale(1.2);
}
/* From Uiverse.io by Praashoo7 */ 
.radio-input {
  display: flex;
  align-items: center;
  justify-content: start;
}

.radio-input input {
  appearance: none;
  width: 2em;
  height: 2em;
  background-color: #171717;
  box-shadow: inset 2px 5px 10px rgb(5, 5, 5);
  border-radius: 5px;
  transition: .4s ease-in-out;
}

.radio-input input:hover {
  scale: 1.2;
  cursor: pointer;
  box-shadow: none;
}

.radio-input .plus1 {
  position: relative;
  top: 0.01em;
  left: -1.45em;
  width: 1.3em;
  height: 0.2em;
  background-color: rgb(191, 0, 255);
  rotate: 45deg;
  scale: 0;
  border-radius: 5px;
  transition: .4s ease-in-out;
}

.radio-input .plus2 {
  position: relative;
  width: 1.3em;
  height: 0.2em;
  background-color: rgb(191, 0, 255);
  transform: rotate(90deg);
  border-radius: 5px;
  transition: .4s ease-in-out;
}

.radio-input input:checked {
  box-shadow: none;
}

.radio-input input:checked + .plus1 {
  transform: rotate(180deg);
  scale: 1;
}
</style>
